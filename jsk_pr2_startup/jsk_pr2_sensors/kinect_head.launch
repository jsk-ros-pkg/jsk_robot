<launch>
  <arg name="launch_openni" default="true" />
  <arg name="debug" default="false" />
  <arg name="respawn" default="true" />
  <!-- for ROS_DISTRO under electric -->
  <!-- <include file="$(find jsk_pr2_startup)/jsk_pr2_sensors/openni_node.launch" /> -->

  <param name="/openni/driver/depth_ir_offset_x" value="4.5" />
  <param name="/openni/driver/depth_ir_offset_y" value="2.5" />
  <include file="$(find openni_launch)/launch/openni.launch"
           if="$(arg launch_openni)">
    <arg name="camera" value="openni"/>
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="publish_tf" value="false"/>
    <arg name="depth_registration" value="true"/>
    <!-- <arg name="debug" value="$(arg debug)"/> -->
  </include>
  <!-- run resize pointcloud publishers -->
  <group ns="openni">
    <group ns="depth_registered">
      <group ns="half">
        <node  name="resize_points_publisher"
               pkg="nodelet" type="nodelet"
               args="load jsk_pcl/ResizePointsPublisher /openni_nodelet_manager">
          <remap from="~input" to="/openni/depth_registered/points" />
          <remap from="~output" to="points" />
          <param name="step_x" value="2" />
          <param name="step_y" value="2" />
        </node>
        <node pkg="nodelet" type="nodelet" name="throttle"
              args="load jsk_topic_tools/LightweightThrottle /openni_nodelet_manager">
              <remap from="~input" to="points" />
              <remap from="~output" to="throttle_points" />
              <param name="update_rate" value="3.0" />
        </node>
      </group>
      <group ns="quater">
        <node  name="resize_points_publisher"
               pkg="nodelet" type="nodelet"
               args="load jsk_pcl/ResizePointsPublisher /openni_nodelet_manager">
          <remap from="~input" to="/openni/depth_registered/points" />
          <remap from="~output" to="points" />
          <param name="step_x" value="4" />
          <param name="step_y" value="4" />
        </node>
        <node pkg="nodelet" type="nodelet" name="throttle"
              args="load jsk_topic_tools/LightweightThrottle /openni_nodelet_manager">
              <remap from="~input" to="points" />
              <remap from="~output" to="throttle_points" />
              <param name="update_rate" value="3.0" />
        </node>
      </group>
    </group>
  </group>
  <!-- check openni_node does not respawn openni_node, in groovy -->
  <!-- add 2013/12/14 -->
  <group if="$(arg respawn)">
    <node pkg="jsk_pr2_startup" name="check_openni_node" type="check_openni_node.py" output="screen"
          if="$(arg launch_openni)" />
  </group>

  <node name="kinect_downsample_for_throttle" pkg="nodelet" type="nodelet"
        args="load pcl/VoxelGrid /openni_nodelet_manager">
    <remap from="~input" to="/openni/depth_registered/points"/>
    <!-- for 0m-4m -->
    <param name="filter_limit_min" value="0" />
    <param name="filter_limit_max" value="4" />
    <!-- down sample with 2cm voxel -->
    <param name="leaf_size" value="0.02" />
  </node>
  <group ns="openni">
    <group ns="depth_registered">
      <node pkg="jsk_topic_tools" type="lightweight_throttle" name="throttle">
        <remap from="~input" to="points" />
        <remap from="~output" to="points_throttle" />
        <param name="update_rate" value="3.0" />
      </node>
    </group>
  </group>
  <node pkg="nodelet" type="nodelet" name="throttle_for_vis" output="screen"
        args="load jsk_topic_tools/LightweightThrottle /openni_nodelet_manager">
    <remap from="~input" to="kinect_downsample_for_throttle/output" />
    <remap from="~output" to="/openni/depth_registered/points_throttle_for_vis" />
    <param name="update_rate" value="3.0" />
  </node>
  <node name="kinect_image_throttle" pkg="topic_tools" type="throttle"
        args="messages /openni/rgb/image_rect_color/compressed 5.0" />
</launch>
