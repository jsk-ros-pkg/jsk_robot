<launch>
  <param name="robot/type" value="go1" />
  <param name="robot/name" value="robot" />

  <arg name="joy_name_space" default="/go1/" />
  <arg name="network" default="wifi" /> <!-- wifi or ethernet -->

  <!-- node to convert ROS to Unitree's internal udp services -->
  <node pkg="unitree_legged_real" type="ros_server" name="node_ros_server"
        respawn="false" output="log" >
    <remap from="/cmd_vel" to="$(arg joy_name_space)/cmd_vel" />
    <rosparam subst_value="true" if="$(eval arg('network') == 'wifi')">
        target_ip: 192.168.12.1
    </rosparam>
    <rosparam subst_value="true" if="$(eval arg('network') == 'ethernet')">
        target_ip: 192.168.123.161
    </rosparam>
  </node>

  <!-- node to convert quadruped_joystick_teleop service to ros_server HighCmd topics -->
  <node pkg="jsk_unitree_startup" type="unitree_service.py"
        name="unitree_service" output="log"
        ns="$(arg joy_name_space)" />
  <node pkg="jsk_unitree_startup" type="human_pose_publisher.py"
        name="human_pose_publisher" output="log" />
  <node pkg="jsk_unitree_startup" type="unitree_state_publisher.py"
        name="unitree_state_publisher" output="screen"
        ns="$(arg joy_name_space)" />

  <!-- <include file="$(find jsk_robot_startup)/launch/quadruped_joystick_teleop.launch" > -->
  <!--   <arg name="joy_name_space" default="$(arg joy_name_space)" /> -->
  <!-- </include> -->

  <include file="$(find app_manager)/launch/app_manager.launch" />

  <!-- start lead teleop.launch -->
  <node name="rosservice"
        pkg="rosservice" type="rosservice"
        args="call --wait /robot/start_app 'name: jsk_unitree_startup/lead_teleop'"
        output="screen" />

  <!-- let people to know unitree is bringup -->
  <node pkg="jsk_unitree_startup" type="wakeup.l"
        name="wakeup" output="log" />
</launch>
