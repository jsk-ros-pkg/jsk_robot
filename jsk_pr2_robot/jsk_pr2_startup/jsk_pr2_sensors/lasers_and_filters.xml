<!-- Copied from pr2_navigation_perception/laser_and_filters.xml -->
<launch>
  <arg name="gazebo" default="false" />

  <node pkg="topic_tools" type="throttle" name="base_scan_throttle" args="messages base_scan 1.0 base_scan_throttled" machine="c2" output="screen"/>
  <!-- Filter for tilt laser shadowing/veiling -->
  <node pkg="laser_filters" type="scan_to_cloud_filter_chain" respawn="true" machine="c2" name="tilt_shadow_filter">
    <remap from="scan" to="tilt_scan" />
    <remap from="cloud_filtered" to="tilt_scan_shadow_filtered" />
    <param name="target_frame" value="base_footprint" />
    <param name="high_fidelity" value="true" />
    <rosparam command="load" file="$(find pr2_navigation_perception)/config/tilt_laser_filters.yaml" unless="$(arg gazebo)"/>
    <rosparam command="load" file="$(find jsk_pr2_startup)/jsk_pr2_sensors/tilt_laser_filters_for_gazebo.yaml" if="$(arg gazebo)"/>
    <rosparam command="load" file="$(find pr2_navigation_perception)/config/point_cloud_footprint_filter.yaml" />
  </node>

  <!-- Filter for tilt laser scans that hit the body of the robot -->
  <node pkg="pr2_navigation_self_filter" type="self_filter" name="tilt_laser_self_filter" machine="c2" respawn="true" output="screen">

    <!-- The topic for the input cloud -->
    <remap from="cloud_in" to="tilt_scan_shadow_filtered" />

    <!-- The topic for the output cloud -->
    <remap from="cloud_out" to="tilt_scan_filtered" />

    <rosparam command="load" file="$(find jsk_pr2_startup)/jsk_pr2_sensors/tilt_self_filter.yaml" />

    <!-- The frame of the sensor used to obtain the data to be
         filtered; This parameter is optional. If it is not specified,
         shadow points will be considered outside -->
    <param name="sensor_frame" type="string" value="laser_tilt_link" />
  </node>

  <!-- Filter for base laser shadowing/veiling -->
  <node pkg="laser_filters" type="scan_to_cloud_filter_chain" machine="c2" respawn="true" name="base_shadow_filter" >
    <remap from="scan" to="base_scan" />
    <remap from="cloud_filtered" to="base_scan_shadow_filtered" />
    <param name="target_frame" value="base_footprint" />
    <rosparam command="load" file="$(find jsk_pr2_startup)/jsk_pr2_sensors/shadow_filter.yaml" unless="$(arg gazebo)"/>
    <rosparam command="load" file="$(find jsk_pr2_startup)/jsk_pr2_sensors/shadow_filter_for_gazebo.yaml" if="$(arg gazebo)"/>
    <rosparam command="load" file="$(find pr2_navigation_perception)/config/point_cloud_footprint_filter.yaml" />
  </node>

  <!-- Filter for base laser scans that hit the body of the robot -->
  <node pkg="pr2_navigation_self_filter" type="self_filter" name="base_laser_self_filter" machine="c2" respawn="true" output="screen">

    <!-- The topic for the input cloud -->
    <remap from="cloud_in" to="base_scan_shadow_filtered" />

    <!-- The topic for the output cloud -->
    <remap from="cloud_out" to="base_scan_marking" />

    <!-- The frame of the sensor used to obtain the data to be
         filtered; This parameter is optional. If it is not specified,
         shadow points will be considered outside -->
    <param name="sensor_frame" type="string" value="base_laser_link" />

    <rosparam command="load" file="$(find pr2_navigation_perception)/config/base_self_filter.yaml" />

  </node>

</launch>
