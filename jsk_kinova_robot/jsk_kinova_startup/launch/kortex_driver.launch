<?xml version="1.0"?>
<launch>
    
    <!-- Arm configuration -->
    <arg name="arm" default="gen3"/>
    <arg name="dof" default="7" if="$(eval arg('arm') == 'gen3')"/> <!-- Number of degrees of freedom of the arm -->
    <arg name="dof" default="6" if="$(eval arg('arm') == 'gen3_lite')"/> <!-- Number of degrees of freedom of the arm -->
    <arg name="vision" default="true"/> <!-- True if the arm has a Vision module -->
    <arg name="use_hard_limits" default="false"/> <!-- Set soft limits as hard limits (Gen3 only) -->

    <!-- Gripper configuration -->
    <!-- Default gripper for Gen3 is none, default gripper for Gen3 lite is gen3_lite_2f -->
    <arg name="gripper" default="" if="$(eval arg('arm') == 'gen3')"/>
    <arg name="gripper" default="gen3_lite_2f" if="$(eval arg('arm') == 'gen3_lite')"/>

    <!-- Namespace -->
    <arg name="robot_name" default="my_$(arg arm)"/>
    <arg name="prefix" default=""/>

    <!-- Kortex API options -->
    <arg name="ip_address" default="192.168.1.10"/>
    <arg name="username" default="admin"/>
    <arg name="password" default="admin"/>
    <arg name="cyclic_data_publish_rate" default="40"/> <!--Hz-->
    <arg name="api_rpc_timeout_ms" default="2000"/> <!--milliseconds-->
    <arg name="api_session_inactivity_timeout_ms" default="35000"/> <!--milliseconds-->
    <arg name="api_connection_inactivity_timeout_ms" default="20000"/> <!--milliseconds-->

    <!-- Action server params -->
    <arg name="default_goal_time_tolerance" default="0.5"/> <!--seconds-->
    <arg name="default_goal_tolerance" default="0.005"/> <!--radians-->

    <!-- -->
    <arg name="launch_robot_state_publisher" default="true" />

    <group ns="$(arg robot_name)" if="$(arg launch_robot_state_publisher)">
        <!-- Load the description for the robot -->
        <group if="$(eval not arg('prefix'))">
            <param
                name="robot_description"
                command="$(find xacro)/xacro --inorder $(find jsk_kinova_description)/robots/$(arg arm)_$(arg gripper).xacro dof:=$(arg dof) vision:=$(arg vision) sim:=false"
                />
        </group>
        <group unless="$(eval not arg('prefix'))">
            <param
                name="robot_description"
                command="$(find xacro)/xacro --inorder $(find jsk_kinova_description)/robots/$(arg arm)_$(arg gripper).xacro dof:=$(arg dof) vision:=$(arg vision) sim:=false prefix:=$(arg prefix)"
                />
        </group>

        <!-- Start the kortex_driver node -->
        <node name="$(arg robot_name)_driver" pkg="kortex_driver" type="kortex_arm_driver" output="screen"> <!--launch-prefix="gdb -ex run args"-->
            <param name="sim" value="false"/>
            <param name="ip_address" value="$(arg ip_address)"/>
            <param name="username" value="$(arg username)"/>
            <param name="password" value="$(arg password)"/>
            <param name="cyclic_data_publish_rate" value="$(arg cyclic_data_publish_rate)"/>
            <param name="api_rpc_timeout_ms" value="$(arg api_rpc_timeout_ms)"/>
            <param name="api_session_inactivity_timeout_ms" value="$(arg api_session_inactivity_timeout_ms)"/>
            <param name="api_connection_inactivity_timeout_ms" value="$(arg api_connection_inactivity_timeout_ms)"/>
            <param name="default_goal_time_tolerance" value="$(arg default_goal_time_tolerance)"/>
            <param name="default_goal_tolerance" value="$(arg default_goal_tolerance)"/>
            <param name="arm" value="$(arg arm)"/>
            <param name="gripper" value="$(arg gripper)"/>
            <param name="dof" value="$(arg dof)"/>
            <param name="use_hard_limits" value="$(arg use_hard_limits)"/>
            <param name="robot_name" value="$(arg robot_name)"/>
            <param name="prefix" value="$(arg prefix)"/>
            <rosparam command="load" file="$(find kortex_description)/arms/$(arg arm)/$(arg dof)dof/config/joint_limits.yaml" subst_value="true"/>
            <!-- If there is a gripper, load the active joint names for it -->
            <rosparam command="load" file="$(find kortex_description)/grippers/$(arg gripper)/config/joint_limits.yaml" unless="$(eval not arg('gripper'))" subst_value="true"/>
        </node>

        <!-- Start MoveIt! main executable -->
        <include file="$(find kortex_description)/../kortex_move_it_config/$(arg arm)_$(arg gripper)_move_it_config/launch/move_group.launch" unless="$(eval not arg('gripper'))"> 
            <arg name="dof" value="$(arg dof)"/>
            <arg name="use_hard_limits" value="$(arg use_hard_limits)"/>
            <arg name="prefix" value="$(arg prefix)"/>
        </include>

        <!-- Start joint and robot state publisher -->
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <rosparam param="source_list">[base_feedback/joint_state]</rosparam>
            <param name="use_gui" value="false"/>
            <param name="rate" value="$(arg cyclic_data_publish_rate)" />
        </node>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
            if="$(arg launch_robot_state_publisher)" />

    </group>
</launch>
