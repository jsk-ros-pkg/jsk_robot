<?xml version="1.0" ?>
<launch>
  <arg name="rarm_ip" default="172.16.0.2"/>
  <arg name="larm_ip" default="172.16.1.2"/>

  <arg name="robot_id" default="dual_panda" />
  <arg name="debug"    default="false" />
  <arg name="rviz"     default="true" />
  <arg name="load_gripper"  default="false" />
  <arg name="gripper_homed" default="false" />

  <!--remap from="dyn_reconf_teleop_param_node"
      to="$(arg robot_id)/dyn_reconf_teleop_param_node" />
  <remap from="$(arg robot_id)/dyn_reconf_teleop_param_node/leader_contact_force_threshold"
      to="$(arg robot_id)/teleop_joint_pd_example_controller/leader/contact_force_threshold" />
  <remap from="$(arg robot_id)/dyn_reconf_teleop_param_node/follower_contact_force_threshold"
      to="$(arg robot_id)/teleop_joint_pd_example_controller/follower/contact_force_threshold" /-->

  <include file="$(find franka_control)/launch/franka_combined_control.launch" >
    <arg name="robot"     value="$(find panda_eus)/models/dual_panda.urdf.xacro" />
    <arg name="robot_id"  value="$(arg robot_id)" />
    <arg name="robot_ips" value="{rarm/robot_ip: $(arg rarm_ip), larm/robot_ip: $(arg larm_ip)}" />
    <arg name="hw_config_file"   value="$(find jsk_panda_startup)/config/dual_panda_control_node.yaml"/>
    <arg name="controllers_file" value="$(find jsk_panda_startup)/config/dual_panda_controllers.yaml" />
    <arg name="controllers_to_start"     value="rarm_state_controller larm_state_controller dual_panda_effort_joint_trajectory_controller"/>
    <!-- <arg name="controllers_to_start"     value="rarm_state_controller larm_state_controller dual_arm_cartesian_impedance_example_controller"/> -->
    <arg name="joint_states_source_list" value="[rarm_state_controller/joint_states, larm_state_controller/joint_states, rarm/franka_gripper/joint_states, larm/franka_gripper/joint_states]"/>
  </include>

  <group ns="$(arg robot_id)">
    <group ns="rarm">
      <include file="$(find franka_gripper)/launch/franka_gripper.launch" >
        <arg name="robot_ip" value="$(arg rarm_ip)" />
        <arg name="stop_at_shutdown" value="true" />
        <arg name="arm_id" value="rarm" />
      </include>
    </group>
    <group ns="larm">
      <include file="$(find franka_gripper)/launch/franka_gripper.launch" >
        <arg name="robot_ip" value="$(arg larm_ip)" />
        <arg name="stop_at_shutdown" value="true" />
        <arg name="arm_id" value="larm" />
      </include>
    </group>
    <!--
    <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" if="$(eval arg('debug') or arg('load_gripper'))" />
    <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_example_controllers)/launch/rviz/teleop_joint_pd_example.rviz" if="$(arg rviz)" />
    -->
  </group>

  <!-- vision -->
  <include file="$(find openni2_launch)/launch/openni2.launch" />

  <!-- teleop -->
  <include file="$(find rwt_image_view)/launch/rwt_image_view.launch"/>

  <node pkg="rwt_teleop" type="draw_force_on_image.py" name="draw_force_on_image"/>

  <group ns="larm_marker">
    <node pkg="image_view2" type="image_view2" name="image_view2_for_draw_force_on_image" output="log">
      <remap from="image" to="/edgetpu_object_detector/output/image"/>
      <remap from="camera_info" to="/camera/rgb/camera_info"/>
      <param name="use_window" value="false"/>
    </node>
  </group>

  <group ns="rarm_marker">
    <node pkg="image_view2" type="image_view2" name="image_view2_for_draw_force_on_image" output="log">
      <remap from="image" to="/larm_marker/image_marked"/>
      <remap from="image_marked" to="/operator_view"/>
      <remap from="camera_info" to="/camera/rgb/camera_info"/>
      <param name="use_window" value="false"/>
    </node>
  </group>

</launch>
