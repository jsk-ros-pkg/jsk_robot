on:
  push:
    branches:
      - master
  pull_request:

env:
  DISPLAY: ':0.0'

jobs:
  ros:
    runs-on: ubuntu-latest
#    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - ROS_DISTRO: indigo
            CONTAINER: jskrobotics/ros-ubuntu:14.04
            USE_DEB: false
            NOT_TEST_INSTALL : true
            TEST_PKGS : "jsk_robot_startup" # app_manager required to pass jsk_fetch test, so this job mainly test if we can build sources
            BEFORE_SCRIPT : "echo 'ros-indigo-pepper-meshes ros-pepper-meshes/accepted-ros-pepper-meshes boolean true' | sudo debconf-set-selections; sudo apt-get install -y -qq ros-indigo-pepper-meshes; echo 'ros-indigo-nao-meshes ros-nao-meshes/accepted-ros-nao-meshes boolean true' | sudo debconf-set-selections; sudo apt-get install -y -qq ros-indigo-nao-meshes; apt-get download ros-indigo-julius; wget -O stripdeb.sh https://gist.githubusercontent.com/jordansissel/748313/raw/8aebce360bc082e33af7bba3c90f755eb655783b/stripdeb.sh; bash stripdeb.sh ros-indigo-julius*.deb; sudo dpkg --force-all -i ros-indigo-julius*.deb; sudo apt-get -y -f install; sudo apt-mark hold ros-indigo-julius" # to install pepper_meshes, nao_meshes, the licenses have to be accepted
          - ROS_DISTRO: kinetic
            CONTAINER: jskrobotics/ros-ubuntu:16.04
            USE_DEB: false
            NOT_TEST_INSTALL : true
            BEFORE_SCRIPT : "wstool merge jsk_robot/jsk_fetch_robot/jsk_fetch_user.rosinstall.kinetic; wstool update; apt-get download ros-kinetic-julius; wget -O stripdeb.sh https://gist.githubusercontent.com/jordansissel/748313/raw/8aebce360bc082e33af7bba3c90f755eb655783b/stripdeb.sh; bash stripdeb.sh ros-kinetic-julius*.deb; sudo dpkg --force-all -i ros-kinetic-julius*.deb; sudo apt-get -y -f install; sudo apt-mark hold ros-kinetic-julius; git clone https://github.com/k-okada/denso_robot_ros.git; (cd ..; git clone https://github.com/k-okada/cobotta_descriptions.git); (cd denso_robot_ros/denso_robot_descriptions; cp -r ../../../cobotta_descriptions/cobotta_description . )"
            EXTRA_DEB : "ros-kinetic-convex-decomposition ros-kinetic-ivcon"
          - ROS_DISTRO: melodic
            CONTAINER: jskrobotics/ros-ubuntu:18.04
            USE_DEB: false
            NOT_TEST_INSTALL : true
            BEFORE_SCRIPT : "apt-get download ros-melodic-julius; wget -O stripdeb.sh https://gist.githubusercontent.com/jordansissel/748313/raw/8aebce360bc082e33af7bba3c90f755eb655783b/stripdeb.sh; bash stripdeb.sh ros-melodic-julius*.deb; sudo dpkg --force-all -i ros-melodic-julius*.deb; sudo apt-get -y -f install; sudo apt-mark hold ros-melodic-julius; git clone https://github.com/k-okada/denso_robot_ros.git; (cd ..; git clone https://github.com/k-okada/cobotta_descriptions.git); (cd denso_robot_ros/denso_robot_descriptions; cp -r ../../../cobotta_descriptions/cobotta_description . )"
          - ROS_DISTRO: melodic
            CONTAINER: jskrobotics/ros-ubuntu:18.04
            USE_DEB: false
            NOT_TEST_INSTALL : true
            # The only difference between melodic.yml and melodic_jsk_pr2eus_master.yml is here
            # We checkout jsk_pr2eus to master branch to test the latest jsk_pr2eus with jsk_robot
            # https://github.com/jsk-ros-pkg/jsk_pr2eus/pull/1397
            BEFORE_SCRIPT : "apt-get download ros-melodic-julius; wget -O stripdeb.sh https://gist.githubusercontent.com/jordansissel/748313/raw/8aebce360bc082e33af7bba3c90f755eb655783b/stripdeb.sh; bash stripdeb.sh ros-melodic-julius*.deb; sudo dpkg --force-all -i ros-melodic-julius*.deb; sudo apt-get -y -f install; sudo apt-mark hold ros-melodic-julius; git clone https://github.com/k-okada/denso_robot_ros.git; (cd ..; git clone https://github.com/k-okada/cobotta_descriptions.git); (cd denso_robot_ros/denso_robot_descriptions; cp -r ../../../cobotta_descriptions/cobotta_description . ); (cd jsk-ros-pkg/jsk_pr2eus; git stash; git checkout master);"
          - ROS_DISTRO: noetic
            CONTAINER: ubuntu:20.04
            USE_DEB: false
            NOT_TEST_INSTALL : true
            TEST_PKGS : "jsk_robot_startup" # check only jsk_robot_startup
            BEFORE_SCRIPT : "apt-get download ros-noetic-julius; wget -O stripdeb.sh https://gist.githubusercontent.com/jordansissel/748313/raw/8aebce360bc082e33af7bba3c90f755eb655783b/stripdeb.sh; bash stripdeb.sh ros-noetic-julius*.deb; sudo dpkg --force-all -i ros-noetic-julius*.deb; sudo apt-get -y -f install; sudo apt-mark hold ros-noetic-julius; git clone https://github.com/k-okada/denso_robot_ros.git; (cd ..; git clone https://github.com/k-okada/cobotta_descriptions.git); (cd denso_robot_ros/denso_robot_descriptions; cp -r ../../../cobotta_descriptions/cobotta_description . )"


    container: ${{ matrix.CONTAINER }}
    steps:
      - name: Install latest git ( use sudo for ros-ubuntu )
        run: |
          (apt-get update && apt-get install -y sudo) || echo "OK"
          sudo apt-get update && sudo apt-get install -y software-properties-common && sudo apt-get update && sudo add-apt-repository -y ppa:git-core/ppa && sudo apt-get update && sudo apt-get install -y git

      - name: work around permission issue  # https://github.com/actions/checkout/issues/760#issuecomment-1097501613
        run: |
          set -x
          export USER=$(whoami)
          if [[ "${{ matrix.CONTAINER }}" =~ "jskrobotics/ros-ubuntu:".* ]]; then
             sudo mkdir -p /__w/
             sudo chmod 777 -R /__w/
             sudo chown -R $USER $HOME
             # sudo mkdir -p /home/runner/work/_temp/_github_workflow/
             # sudo chown -R $USER $HOME /home/runner/work/_temp/_github_workflow/
             # ls -al /home/runner/work/_temp/_github_workflow/
          fi
          git config --global --add safe.directory $GITHUB_WORKSPACE
        shell: bash

      - name: Chcekout
        uses: actions/checkout@v3.0.2
        with:
          submodules: true

      - name: Start X server
        run: |
          if [[ "${{ matrix.CONTAINER }}" =~ "jskrobotics/ros-ubuntu:14.04" ]]; then exit 0; fi
          echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections || echo "failing on ros-ubuntu is OK" # set non interactive tzdata https://stackoverflow.com/questions/8671308/non-interactive-method-for-dpkg-reconfigure-tzdata
          sudo apt-get -y -qq install mesa-utils x11-xserver-utils xserver-xorg-video-dummy wget
          export DISPLAY=:0
          wget https://raw.githubusercontent.com/jsk-ros-pkg/jsk_travis/master/dummy.xorg.conf -O /tmp/dummy.xorg.conf
          sudo Xorg -noreset +extension GLX +extension RANDR +extension RENDER -logfile /tmp/xorg.log -config /tmp/dummy.xorg.conf $DISPLAY &
          sleep 3 # wait x server up
          export QT_X11_NO_MITSHM=1 # http://wiki.ros.org/docker/Tutorials/GUI
          xhost +local:root
        shell: bash

      - name: Run jsk_travis
        uses: jsk-ros-pkg/jsk_travis@master
        with:
          ROS_PARALLEL_JOBS : "-j2"
          CATKIN_PARALLEL_JOBS : "-p2"
          ROS_PARALLEL_TEST_JOBS : "-j1"
          CATKIN_PARALLEL_TEST_JOBS : "-p1"
          ROS_DISTRO : ${{ matrix.ROS_DISTRO }}
          USE_DEB :  ${{ matrix.USE_DEB }}
          NOT_TEST_INSTALL : ${{ matrix.NOT_TEST_INSTALL }}
          TEST_PKGS : ${{ matrix.TEST_PKGS }}
          BEFORE_SCRIPT : ${{ matrix.BEFORE_SCRIPT }}
          EXTRA_DEB : ${{ matrix.EXTRA_DEB }}
