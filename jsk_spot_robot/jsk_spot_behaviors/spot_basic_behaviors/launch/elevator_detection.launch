<launch>
    <arg name="TOPIC_DEPTH_FRONT_RIGHT" default="/spot/depth/frontright"/>
    <arg name="TOPIC_DEPTH_FRONT_LEFT" default="/spot/depth/frontleft"/>
    <arg name="TOPIC_DEPTH_RIGHT" default="/spot/depth/right"/>
    <arg name="TOPIC_DEPTH_LEFT" default="/spot/depth/left"/>
    <arg name="TOPIC_DEPTH_BACK" default="/spot/depth/back"/>

    <arg name="TOPIC_CAMERA_FRONT_RIGHT" default="/spot/camera/frontright"/>
    <arg name="TOPIC_CAMERA_FRONT_LEFT" default="/spot/camera/frontleft"/>
    <arg name="TOPIC_CAMERA_RIGHT" default="/spot/camera/right"/>
    <arg name="TOPIC_CAMERA_LEFT" default="/spot/camera/left"/>
    <arg name="TOPIC_CAMERA_BACK" default="/spot/camera/back"/>

    <!-- depth_image_proc -->
    <!-- front right -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="obstacle_detector_front_right_depth_image_proc"
        args="standalone depth_image_proc/point_cloud_xyz"
        >
        <remap from="camera_info" to="$(arg TOPIC_DEPTH_FRONT_RIGHT)/camera_info"/>
        <remap from="image_rect" to="$(arg TOPIC_DEPTH_FRONT_RIGHT)/image"/>
        <remap from="points" to="$(arg TOPIC_DEPTH_FRONT_RIGHT)/points"/>
    </node>
    <!-- front left -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="obstacle_detector_front_left_depth_image_proc"
        args="standalone depth_image_proc/point_cloud_xyz"
        >
        <remap from="camera_info" to="$(arg TOPIC_DEPTH_FRONT_LEFT)/camera_info"/>
        <remap from="image_rect" to="$(arg TOPIC_DEPTH_FRONT_LEFT)/image"/>
        <remap from="points" to="$(arg TOPIC_DEPTH_FRONT_LEFT)/points"/>
    </node>
    <!-- right -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="obstacle_detector_right_depth_image_proc"
        args="standalone depth_image_proc/point_cloud_xyz"
        >
        <remap from="camera_info" to="$(arg TOPIC_DEPTH_RIGHT)/camera_info"/>
        <remap from="image_rect" to="$(arg TOPIC_DEPTH_RIGHT)/image"/>
        <remap from="points" to="$(arg TOPIC_DEPTH_RIGHT)/points"/>
    </node>
    <!-- left -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="obstacle_detector_left_depth_image_proc"
        args="standalone depth_image_proc/point_cloud_xyz"
        >
        <remap from="camera_info" to="$(arg TOPIC_DEPTH_LEFT)/camera_info"/>
        <remap from="image_rect" to="$(arg TOPIC_DEPTH_LEFT)/image"/>
        <remap from="points" to="$(arg TOPIC_DEPTH_LEFT)/points"/>
    </node>
    <!-- back -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="obstacle_detector_back_depth_image_proc"
        args="standalone depth_image_proc/point_cloud_xyz"
        >
        <remap from="camera_info" to="$(arg TOPIC_DEPTH_BACK)/camera_info"/>
        <remap from="image_rect" to="$(arg TOPIC_DEPTH_BACK)/image"/>
        <remap from="points" to="$(arg TOPIC_DEPTH_BACK)/points"/>
    </node>

    <!-- AprilTag Detector -->
    <node
        pkg="apriltag_ros"
        type="apriltag_ros_continuous_node"
        name="elevator_detection_front_right_apriltag_detector"
        >
        <!-- Remap topics from those used in code to those on the ROS network -->
        <remap from="image_rect" to="$(arg TOPIC_CAMERA_FRONT_RIGHT)/image" />
        <remap from="camera_info" to="$(arg TOPIC_CAMERA_FRONT_RIGHT)/camera_info" />

        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/settings.yaml" />
        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/tags.yaml" />
        <param name="camera_frame" type="str" value="frontright_fisheye" />
    </node>
    <node
        pkg="apriltag_ros"
        type="apriltag_ros_continuous_node"
        name="elevator_detection_front_left_apriltag_detector"
        >
        <!-- Remap topics from those used in code to those on the ROS network -->
        <remap from="image_rect" to="$(arg TOPIC_CAMERA_FRONT_LEFT)/image" />
        <remap from="camera_info" to="$(arg TOPIC_CAMERA_FRONT_LEFT)/camera_info" />

        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/settings.yaml" />
        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/tags.yaml" />
        <param name="camera_frame" type="str" value="frontleft_fisheye" />
    </node>
    <node
        pkg="apriltag_ros"
        type="apriltag_ros_continuous_node"
        name="elevator_detection_right_apriltag_detector"
        >
        <!-- Remap topics from those used in code to those on the ROS network -->
        <remap from="image_rect" to="$(arg TOPIC_CAMERA_RIGHT)/image" />
        <remap from="camera_info" to="$(arg TOPIC_CAMERA_RIGHT)/camera_info" />

        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/settings.yaml" />
        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/tags.yaml" />
        <param name="camera_frame" type="str" value="right_fisheye" />
    </node>
    <node
        pkg="apriltag_ros"
        type="apriltag_ros_continuous_node"
        name="elevator_detection_left_apriltag_detector"
        >
        <!-- Remap topics from those used in code to those on the ROS network -->
        <remap from="image_rect" to="$(arg TOPIC_CAMERA_LEFT)/image" />
        <remap from="camera_info" to="$(arg TOPIC_CAMERA_LEFT)/camera_info" />

        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/settings.yaml" />
        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/tags.yaml" />
        <param name="camera_frame" type="str" value="left_fisheye" />
    </node>
    <node
        pkg="apriltag_ros"
        type="apriltag_ros_continuous_node"
        name="elevator_detection_back_apriltag_detector"
        >
        <!-- Remap topics from those used in code to those on the ROS network -->
        <remap from="image_rect" to="$(arg TOPIC_CAMERA_BACK)/image" />
        <remap from="camera_info" to="$(arg TOPIC_CAMERA_BACK)/camera_info" />

        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/settings.yaml" />
        <rosparam command="load" file="$(find spot_basic_behaviors)/config/apriltag/tags.yaml" />
        <param name="camera_frame" type="str" value="back_fisheye" />
    </node>

    <!-- tf relay for elevator frame -->
    <node
        pkg="tf_relay"
        type="tf_relay"
        name="elevator_door_tf_relay"
        >
        <rosparam>
            max_duration: 5.0
            timeout_duration: 0.05
            timer_duration: 0.1
            reference_frame_id: elevator_door_frame_raw
            output_frame_id: elevator_door_frame
            fixed_frame_id: odom
        </rosparam>
    </node>

    <!-- Concatenate pointclouds -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="elevator_detection_concatenate_pointcloud"
        args="standalone pcl/PointCloudConcatenateDataSynchronizer"
        >
        <remap from="~output" to="/spot/depth/points" />
        <rosparam subst_value="true">
          approximate_sync: true
          output_frame: body
          input_topics:
            - $(arg TOPIC_DEPTH_FRONT_RIGHT)/points
            - $(arg TOPIC_DEPTH_FRONT_LEFT)/points
            - $(arg TOPIC_DEPTH_RIGHT)/points
            - $(arg TOPIC_DEPTH_LEFT)/points
            - $(arg TOPIC_DEPTH_BACK)/points
        </rosparam>
    </node>

    <!-- elevator door detector -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="elevator_detection_door_detector_attention_clipper"
        args="standalone jsk_pcl/AttentionClipper"
        >
        <remap from="~input/points" to="/spot/depth/points"/>
        <rosparam subst_value="true">
            initial_pos: [0, 0, 0.5]
            initial_rot: [0, 0, 0]
            dimension_x: 0.5
            dimension_y: 0.5
            dimension_z: 0.8
            frame_id: elevator_door_frame
        </rosparam>
    </node>
    <node
        pkg="jsk_pcl_ros"
        type="extract_indices"
        name="elevator_detection_door_detector_extract_indices"
        >
        <remap from="~input" to="/spot/depth/points"/>
        <remap from="~indices" to="elevator_detection_door_detector_attention_clipper/output/point_indices"/>
        <remap from="~output" to="/spot_recognition/elevator_door_points"/>
    </node>

    <!-- switchbot_ros -->
    <node
        pkg="switchbot_ros"
        type="switchbot_ros_server.py"
        name="switchbot_ros"
        output="screen">
        <rosparam
            command="load"
            file="$(find spot_basic_behaviors)/config/switchbot_ros/token.yaml"
            />
    </node>

</launch>
