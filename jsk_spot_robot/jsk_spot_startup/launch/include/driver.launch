<launch>
  <arg name="credential_config" default="/var/lib/robot/credentials/spot_credential.yaml" />
  <arg name="launch_robot_state_publisher" default="true" />

  <group if="$(arg launch_robot_state_publisher)">
    <include file="$(find spot_description)/launch/description.launch" />
  </group>

  <node
      pkg="spot_driver"
      type="spot_ros"
      name="spot_ros"
      ns="spot"
      output="screen"
      respawn="true"
      >
    <rosparam file="$(find spot_driver)/config/spot_ros.yaml" command="load" />
    <rosparam file="$(arg credential_config)" command="load" />
    <remap from="joint_states" to="/joint_states"/>
    <remap from="tf" to="/tf"/>
  </node>

  <node name="cmd_vel_smoother" pkg="cmd_vel_smoother" type="cmd_vel_smoother">
    <remap from="input" to="spot/cmd_vel_unsmoothed" />
    <remap from="output" to="spot/cmd_vel" />

    <param name="desired_rate" value="10.0" />
    <param name="x_acc_lim" value="1.0" />
    <param name="y_acc_lim" value="0.5" />
    <param name="yaw_acc_lim" value="0.1" />
    <param name="decel_factor" value="0.8" />
    <param name="max_count" value="5" />
  </node>

  <node
      pkg="twist_mux"
      type="twist_mux"
      name="twist_mux"
      >
    <rosparam command="load" file="$(find jsk_spot_startup)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="spot/cmd_vel_unsmoothed"/>
  </node>

  <!-- head teleop nodes
     1. subscribe spot/manipulator_state and publish joy_head/joy_raw, using estimated_end_effector_force_in_hand
     2. subscribe joy_head/joy_raw and publish joy_head/joy_complemented, see Tukamoto RSJ 2022 paper
     3. subscribe joy_head/joy_complemented and publish joy_head/cmd_vel
  -->
  <node pkg="jsk_spot_startup" type="end_effector_to_joy.py" name="end_effector_to_joy"/>
  <node pkg="jsk_robot_startup" type="head_teleop_joy_completion.py" name="head_teleop_joy_completion">
    <remap from="~joy_input" to="joy_head/joy_raw" />
    <remap from="~joy_output" to="joy_head/joy_complemented" />

    <param name="~pass_through" value="false" />
    <rosparam commagnd="load" file="$(find jsk_robot_startup)/config/head_teleop_twist_joy.yaml" />
  </node>
  <node pkg="teleop_twist_joy" type="teleop_node" name="teleop_twist_joy_head" >
    <remap from="joy" to="joy_head/joy_complemented" />
    <remap from="cmd_vel" to="joy_head/cmd_vel" />
    <rosparam command="load" file="$(find jsk_robot_startup)/config/head_teleop_twist_joy.yaml" />
  </node>


  <!-- joystick teleop nodes -->
  <include file="$(find jsk_robot_startup)/launch/quadruped_joystick_teleop.launch" >
    <arg name="pad_type" value="dualsense" />
    <arg name="joy_dev" value="/dev/input/js0" />
    <arg name="cmd_vel_topic" default="bluetooth_teleop/cmd_vel" />
    <arg name="joy_name_space" default="/spot/" />
    <arg name="dock_service" default="dock_fixed_id" />
    <arg name="tuck_service" default="stow_arm" />
    <arg name="untuck_service" default="unstow_arm" />
  </include>
  <!-- node to receive /spot/dock_fixed_no and calls /spot/dock -->
  <node pkg="jsk_spot_startup" type="call_spot_dock_with_id.py" name="call_spot_dock_with_id">
    <remap from="~dock_id" to="/spot/spot_ros/dock_id" />
  </node>

  <!-- republish compressed image -->
  <node pkg="image_transport"
	type="republish"
	name="hand_camera_compress"
	args="raw in:=/spot/camera/hand_color/image compressed out:=/spot/camera/hand_color/image" />

  <node
      pkg="laptop_battery_monitor"
      type="laptop_battery.py"
      name="laptop_battery"
      >
  </node>

  <node
      pkg="jsk_spot_startup"
      type="battery_visualizer.py"
      name="battery_visualizer"
      />

  <node
      pkg="jsk_spot_startup"
      type="laptop_battery_visualizer.py"
      name="laptop_battery_visualizer"
      />

  <node
      pkg="jsk_spot_startup"
      type="cable_connection_detector.py"
      name="cable_connection_detector"
      >
  </node>

  <node
      pkg="jsk_spot_startup"
      type="battery_notifier.py"
      name="battery_notifier"
      >
      <remap from="~start_app" to="/robot/start_app" />
  </node>

  <node
      pkg="jsk_spot_plug_server"
      type="plug_server.py"
      name="plug_server"
      >
  </node>

</launch>
