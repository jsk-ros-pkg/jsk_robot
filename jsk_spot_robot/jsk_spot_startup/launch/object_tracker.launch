<launch>
  <arg name="gpu" default="0" />
  <arg name="use_object_detector" default="false" />
  <arg name="input_panorama_image" default="/dual_fisheye_to_panorama/output/quater" />
  <arg name="input_panorama_info" default="/dual_fisheye_to_panorama/panorama_info" />
  <arg name="input_class" default="/edgetpu_panorama_object_detector/output/class" />
  <arg name="input_rects" default="/edgetpu_panorama_object_detector/output/rects" />

  <arg name="launch_conversion_nodes" default="true" />

  <!-- use_object_detector: true -->
  <node
      pkg="jsk_perception"
      type="ssd_object_detector.py"
      name="ssd_object_detector"
      if="$(arg use_object_detector)"
      >
    <remap from="~input_panorama_image" to="$(arg input_panorama_image)" />
    <rosparam subst_value="true">
      gpu: $(arg gpu)
    </rosparam>
    <param name="model_path" value="voc0712" />
  </node>
  <node
      pkg="jsk_perception"
      type="deep_sort_tracker_node.py"
      name="deep_sort_tracker"
      output="screen"
      clear_params="true"
      if="$(arg use_object_detector)"
      >
    <remap from="~input" to="$(arg input_panorama_image)" />
    <remap from="~input/rects" to="ssd_object_detector/output/rect" />
    <remap from="~input/class" to="ssd_object_detector/output/class" />
    <rosparam subst_value="true">
      gpu: $(arg gpu)
      pretrained_model: $(find jsk_perception)/trained_data/deepsort_chainermodel.npz
    </rosparam>
  </node>
  <node
      pkg="jsk_perception"
      type="rect_array_to_panorama_rect_array.py"
      name="rect_array_to_panorama_rect_array"
      if="$(arg use_object_detector)"
      if="$(arg launch_conversion_nodes"
      >
      <remap from="~input_panorama_image" to="$(arg input_panorama_image)" />
      <remap from="~input_panorama_info" to="$(arg input_panorama_info)" />
      <remap from="~input" to="ssd_object_detector/output/rects" />
  </node>
  <node
      pkg="jsk_perception"
      type="panorama_rect_array_to_bounding_box_array.py"
      name="panorama_rect_array_to_bounding_box_array"
      if="$(arg use_object_detector)"
      if="$(arg launch_conversion_nodes"
      >
      <param name="~frame_fixed" value="odom" />
      <remap from="~input_class" to="ssd_object_detector/output/class" />
      <remap from="~input_panorama_rects" to="rect_array_to_panorama_rect_array/output" />
  </node>

  <!-- use_object_detector: false -->
  <node
      pkg="jsk_perception"
      type="deep_sort_tracker_node.py"
      name="deep_sort_tracker"
      output="screen"
      clear_params="true"
      unless="$(arg use_object_detector)">
    <remap from="~input" to="$(arg input_panorama_image)" />
    <remap from="~input/rects" to="$(arg input_rects)" />
    <remap from="~input/class" to="$(arg input_class)" />
    <rosparam subst_value="true">
      gpu: $(arg gpu)
      pretrained_model: $(find jsk_perception)/trained_data/deepsort_chainermodel.npz
      approximate_sync: True
      slop: 0.3
    </rosparam>
  </node>
  <node
      pkg="jsk_perception"
      type="rect_array_to_panorama_rect_array.py"
      name="rect_array_to_panorama_rect_array"
      unless="$(arg use_object_detector)"
      if="$(arg launch_conversion_nodes"
      >
      <remap from="~input_panorama_image" to="$(arg input_panorama_image)" />
      <remap from="~input_panorama_info" to="$(arg input_panorama_info)" />
      <remap from="~input" to="$(arg input_rects)" />
  </node>
  <node
      pkg="jsk_perception"
      type="panorama_rect_array_to_bounding_box_array.py"
      name="panorama_rect_array_to_bounding_box_array"
      unless="$(arg use_object_detector)"
      if="$(arg launch_conversion_nodes"
      >
      <rosparam>
          dimensions:
              person: [0.5, 0.5, 1.5]
              chair: [0.5, 0.5, 1.0]
      </rosparam>
      <param name="~frame_fixed" value="odom" />
      <remap from="~input_class" to="$(arg input_class)" />
      <remap from="~input_panorama_rects" to="rect_array_to_panorama_rect_array/output" />
  </node>
</launch>
