<launch>
  <include file="$(find jsk_fetch_startup)/jsk_fetch.machine" />

  <!-- add jsk startups -->
  <node pkg="jsk_fetch_startup" name="warning" type="warning.py" respawn="true" />
  <node pkg="jsk_fetch_startup" name="nav_speak" type="nav_speak.py" respawn="true" />
  <node pkg="jsk_fetch_startup" name="boot_sound" type="boot_sound.py" />

  <!-- Buffer Server -->
  <node pkg="tf2_ros" type="buffer_server" name="tf2_buffer_server" output="screen">
    <param name="buffer_size" value="120.0"/>
  </node>

  <!-- jsk_pr2_startup/jsk_pr2_lifelog/db_client.launch -->
  <!-- mongodb -->
  <param name="robot/name" value="fetch" />
  <include file="$(find jsk_robot_startup)/lifelog/mongodb.launch" >
    <arg name="use_daemon" value="true"/>
    <arg name="port" value="27017" />
    <arg name="repl_set_mode" value="false" />
    <arg name="replicate" default="false" />
  </include>
  <!-- logging and resoring pr2 position data -->
  <arg name="map_frame" value="map" />
  <node name="move_base_db"
        pkg="jsk_pr2_startup" type="move_base_db.py" >
    <param name="map_frame" value="$(arg map_frame)"/>
    <param name="robot_frame" value="base_link"/> <!-- fetch does not have base_footprint -->
    <param name="update_cycle" value="0.1" />
  </node>

  <!-- include fetch_navigation -->
  <include file="$(find fetch_navigation)/launch/fetch_nav.launch" >
    <arg name="map_file" default="$(find jsk_maps)/raw_maps/eng2-7f-0.05.yaml" />
    <arg name="map_keepout_file" default="$(find jsk_maps)/raw_maps/eng2-7f-0.05_keepout.yaml" />
    <arg name="use_keepout" default="true" />
  </include>
  <rosparam ns="move_base/global_costmap">
inflater:
  inflation_radius: 1.00 # 0.7
  cost_scaling_factor: 20.0 # 10.0
update_frequency: 4.0 # default 5 (http://wiki.ros.org/navigation/Tutorials/Navigation%20Tuning%20Guide)
  </rosparam>
  <rosparam ns="move_base/local_costmap">
inflater:
  inflation_radius: 0.32 # 0.7
  cost_scaling_factor: 100.0 # 25.0 default 10, increasing factor decrease the cost value
  </rosparam>
  <rosparam ns="move_base">
TrajectoryPlannerROS:
  max_vel_x: 0.75 # 1.0
  # to escape from stuck
  min_vel_x: 0.25 # 0.15
  acc_lim_th: 4.0 # 3.2
  min_in_place_vel_theta: 0.3 # 0.3
# Recovery behaviors
recovery_behavior_enabled: true
recovery_behaviors:
  - name: "conservative_reset"
    type: "clear_costmap_recovery/ClearCostmapRecovery"
    reset_distance: 3.0
  - name: "rotate_recovery"
    type: "rotate_recovery/RotateRecovery"
    frequency: 20.0
    sim_granularity: 0.017
  - name: "aggressive_reset"
    type: "clear_costmap_recovery/ClearCostmapRecovery"
    reset_distance: 0.5 # 0.5
  </rosparam>
</launch>
