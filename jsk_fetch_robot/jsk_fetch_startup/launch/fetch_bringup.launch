<launch>
  <arg name="launch_moveit" default="true" />
  <arg name="launch_teleop" default="true" />
  <arg name="launch_move_base" default="true" />
  <arg name="boot_sound" default="false" />
  <arg name="map_frame" default="eng2" />
  <arg name="map_file" default="$(find jsk_maps)/raw_maps/eng2-7f-0.05.yaml"/>
  <arg name="keepout_map_file" default="$(find jsk_maps)/raw_maps/eng2-7f-0.05_keepout.yaml" />

  <param name="robot/type" value="fetch" />
  <param name="robot/name" command='bash -c "hostname | xargs echo -n"' />

  <include file="$(find jsk_fetch_startup)/jsk_fetch.machine" />

  <!-- add jsk startups -->
  <node pkg="jsk_fetch_startup" name="warning" type="warning.py" respawn="true" />
  <node pkg="jsk_fetch_startup" name="nav_speak" type="nav_speak.py" respawn="true" />
  <node if="$(arg boot_sound)" pkg="jsk_fetch_startup" name="boot_sound" type="boot_sound.py" />

  <!-- japanese speech node -->
  <include file="$(find voice_text)/launch/voice_text.launch" />

  <!-- Buffer Server -->
  <node pkg="tf2_ros" type="buffer_server" name="tf2_buffer_server" output="screen">
    <param name="buffer_size" value="120.0"/>
  </node>

  <!-- logging -->
  <include file="$(find jsk_fetch_startup)/launch/fetch_lifelog.xml">
    <arg name="map_frame" value="$(arg map_frame)" />
  </include>

  <!-- include fetch moveit -->
  <include file="$(find fetch_moveit_config)/launch/move_group.launch"
           if="$(arg launch_moveit)" />

  <!-- teleop -->
  <include file="$(find jsk_fetch_startup)/launch/fetch_teleop.xml"
           if="$(arg launch_teleop)" />

  <group if="$(arg launch_move_base)">
    <!-- jsk_maps -->
    <include file="$(find jsk_maps)/launch/start_map_$(arg map_frame).launch">
      <arg name="launch_map_server" value="false" />
    </include>

    <!-- include fetch_navigation -->
    <include file="$(find fetch_navigation)/launch/fetch_nav.launch" >
      <arg name="map_file" value="$(arg map_file)" />
      <arg name="map_keepout_file" value="$(arg keepout_map_file)" />
      <arg name="use_keepout" value="true" />
    </include>
    <rosparam ns="move_base/global_costmap">
inflater:
  inflation_radius: 0.80 # 0.7
  cost_scaling_factor: 10.0 # 10.0
    </rosparam>
    <rosparam ns="move_base/local_costmap">
inflater:
  inflation_radius: 0.30 # 0.7
  cost_scaling_factor: 100.0 # 25.0 default 10, increasing factor decrease the cost value
update_frequency: 10.0 # default 5 (http://wiki.ros.org/navigation/Tutorials/Navigation%20Tuning%20Guide)
    </rosparam>
    <rosparam ns="move_base">
base_local_planner: base_local_planner/TrajectoryPlannerROS
TrajectoryPlannerROS:
  escape_vel: -0.1 # -0.1
recovery_behavior_enabled: true
recovery_behaviors:
  - name: "conservative_reset"
    type: "clear_costmap_recovery/ClearCostmapRecovery"
  - name: "rotate_recovery"
    type: "rotate_recovery/RotateRecovery"
    frequency: 20.0
    sim_granularity: 0.017
  - name: "aggressive_reset"
    type: "clear_costmap_recovery/ClearCostmapRecovery"
conservative_reset: {reset_distance: 1.0} # 3.0
aggressive_reset: {reset_distance: 0.2} # 0.5
move_slow_and_clear: {clearing_distance: 0.5, limited_distance: 0.3, limited_rot_speed: 0.45, limited_trans_speed: 0.25}
    </rosparam>
  </group>
</launch>
